{
  "swagger": "2.0",
  "info": {
    "description": "POPULATION MANAGEMENT API",
    "version": "1.0.0",
    "title": "Pop Management API",
    "contact": {
      "email": "mcdalinoluoch@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "https://pop-api-lms.herokuapp.com/",
  "basePath": "/api/v1/",
  "tags": [{
      "name": "Users",
      "description": "Users Management"
    },
    {
      "name": "Location",
      "description": "Location Management"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/user/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user",
        "description": "Add new user to the DB",
        "operationId": "signupUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "New User Object",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Users"
          }
        }],
        "responses": {
          "201": {
            "description": "Account was created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/signin": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Signin into an existing account",
        "description": "Signin into an existing account",
        "operationId": "signinUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Signin into an existing Account",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Users"
          }
        }],
        "responses": {
          "200": {
            "description": "Signed in successfully"
          },
          "400": {
            "description": "Inccorrect credentials"
          }
        }
      }
    },
    "/locations": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create new Location",
        "description": "Add new location to the DB",
        "operationId": "createLocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New Location Object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Location was created successfully"
          },
          "400": {
            "description": "You must be logged in to perform this action"
          }
        }
      },
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get All Locations",
        "description": "Get all location",
        "operationId": "getAll",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "authorization",
          "in": "header",
          "description": "An authorization token",
          "required": true,
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Location"
              }
            }
          }
        }
      }
    },
    "/locations/:id": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get Single Location",
        "description": "",
        "operationId": "getOne",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of the location to retrieve ",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "Location not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Location"
        ],
        "summary": "Update Location",
        "description": "Update a Location",
        "operationId": "updateLocation",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Location to be updated",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "operation successful"
          },
          "404": {
            "description": "Location was not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Delete Location",
        "description": "Delete Single Location",
        "operationId": "deleteLocation",
        "produces": [
          "application/json"
        ],
        "parameters": [{
            "name": "authorization",
            "in": "header",
            "description": "An authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Location to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "operation successful"
          },
          "404": {
            "description": "Invalid id supplied"
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "females": {
          "type": "number"
        },
        "males": {
          "type": "number"
        },
        "parentLocation": {
          "type": "string"
        }
      }
    }
  }
}